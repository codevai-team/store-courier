import type { OrderWithDetails, TelegramRegistrationResult } from '@/types'
import { getCourierChatId, setCourierChatId } from '@/lib/settings'
import { prisma } from '@/lib/prisma'
import { getBot } from '@/lib/telegram-bot'


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –º–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å URL –≤ Telegram inline keyboard
function isValidTelegramUrl(url: string): boolean {
  // Telegram –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç localhost, 127.0.0.1, 192.168.x.x –∏ –¥—Ä—É–≥–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
  const invalidPatterns = [
    /localhost/i,
    /127\.0\.0\.1/,
    /192\.168\./,
    /10\.\d+\.\d+\.\d+/,
    /172\.(1[6-9]|2[0-9]|3[0-1])\./,
    /^http:\/\/(?!.*\.)/  // HTTP –±–µ–∑ –¥–æ–º–µ–Ω–∞
  ]
  
  return !invalidPatterns.some(pattern => pattern.test(url))
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
function checkMessageLength(message: string, keyboard?: object): boolean {
  const messageLength = message.length
  const keyboardLength = keyboard ? JSON.stringify(keyboard).length : 0
  const totalLength = messageLength + keyboardLength
  
  // // console.log(`Telegram: –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: ${messageLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  // // console.log(`Telegram: –î–ª–∏–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${keyboardLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  // // console.log(`Telegram: –û–±—â–∞—è –¥–ª–∏–Ω–∞: ${totalLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  
  if (totalLength > 4096) {
    // // console.warn('‚ö†Ô∏è Telegram: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤!')
    return false
  }
  
  return true
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –≤—Å–µ–º –∫—É—Ä—å–µ—Ä–∞–º
export async function sendNewOrderNotification(order: OrderWithDetails) {
  try {
    // console.log('Telegram: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ:', order.id)
    
    const bot = await getBot()
    if (!bot) {
      // console.error('Telegram: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞')
      return
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
    const couriers = await prisma.user.findMany({
      where: {
        role: 'COURIER'
      }
    })

    // console.log('Telegram: –ù–∞–π–¥–µ–Ω–æ –∫—É—Ä—å–µ—Ä–æ–≤:', couriers.length)
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*
    
üìã *–ó–∞–∫–∞–∑ #${order.id.slice(-8)}*
üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üí∞ *–°—É–º–º–∞:* ${order.orderItems.reduce((sum, item) => sum + Number(item.price) * item.amount, 0).toFixed(2)} —Å–æ–º
üìÖ *–î–∞—Ç–∞:* ${new Date(order.createdAt).toLocaleString('ru-RU')}

${order.customerComment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${order.customerComment}` : ''}

*–¢–æ–≤–∞—Ä—ã:*
${order.orderItems.map(item => 
  `‚Ä¢ ${item.product.name} (${item.amount} —à—Ç.) - ${(Number(item.price) * item.amount).toFixed(2)} —Å–æ–º`
).join('\n')}`

    // console.log('Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞–º...')
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ URL –≤–∞–ª–∏–¥–Ω—ã–π –¥–ª—è Telegram
    const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'
    const isUrlValid = isValidTelegramUrl(baseUrl)
    
    let keyboard = null
    if (isUrlValid) {
      keyboard = {
        inline_keyboard: [
          [
            {
              text: 'üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑',
              url: `${baseUrl}/courier/dashboard?order=${order.id}`
            }
          ]
        ]
      }
      // console.log(`Telegram: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å URL —Å–æ–∑–¥–∞–Ω–∞: ${baseUrl}`)
    } else {
      // console.log(`‚ö†Ô∏è Telegram: URL "${baseUrl}" –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Telegram. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–Ω–æ–ø–æ–∫.`)
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –∫—É—Ä—å–µ—Ä–∞–º
    let _successCount = 0
    let _errorCount = 0

    for (const courier of couriers) {
      try {
        const chatId = await getCourierChatId(courier.id)
        if (!chatId) {
          // console.log(`Telegram: Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ${courier.fullname} (${courier.id})`)
          continue
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        if (!keyboard || !checkMessageLength(message, keyboard)) {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–Ω–æ–ø–∫–∏
          const sendMessagePromise = bot.sendMessage(chatId, message, {
            parse_mode: 'Markdown'
          })
          
          const timeoutPromise = new Promise((_, reject) => {
            setTimeout(() => reject(new Error('Telegram API timeout')), 10000)
          })
          
          await Promise.race([sendMessagePromise, timeoutPromise])
        } else {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –∫–Ω–æ–ø–∫–æ–π
          const sendMessagePromise = bot.sendMessage(chatId, message, {
            parse_mode: 'Markdown',
            reply_markup: keyboard
          })
          
          const timeoutPromise = new Promise((_, reject) => {
            setTimeout(() => reject(new Error('Telegram API timeout')), 10000)
          })
          
          await Promise.race([sendMessagePromise, timeoutPromise])
        }

        // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${courier.fullname}`)
        _successCount++
      } catch (_courierError) { // eslint-disable-line @typescript-eslint/no-unused-vars
        // console.error(`Telegram: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É—Ä—å–µ—Ä—É ${courier.fullname}:`, _courierError)
        _errorCount++
      }
    }

    // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞ ${order.id}. –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${errorCount}`)
  } catch (error) {
    // console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error)
    
    // –ù–µ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
    // –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    if (error instanceof Error) {
      if (error.message.includes('timeout')) {
        // console.log('Telegram: –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
      } else if (error.message.includes('ETELEGRAM')) {
        // console.log('Telegram: –û—à–∏–±–∫–∞ API Telegram')
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫—É—Ä—å–µ—Ä—É
export async function sendOrderStatusUpdateNotification(order: OrderWithDetails, oldStatus: string) {
  try {
    const bot = await getBot()
    if (!bot) {
      // console.error('Telegram: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞')
      return
    }

    // –ï—Å–ª–∏ —É –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (!order.courierId) {
      // console.log('Telegram: –£ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è')
      return
    }

    const chatId = await getCourierChatId(order.courierId)
    if (!chatId) {
      // console.log(`Telegram: Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ${order.courierId} (${order.courier?.fullname || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É—Ä—å–µ—Ä'})`)
      // console.log('Telegram: –ö—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start')
      return
    }
    
    const statusLabels = {
      'CREATED': '–°–æ–∑–¥–∞–Ω',
      'COURIER_WAIT': '–û–∂–∏–¥–∞–µ—Ç –∫—É—Ä—å–µ—Ä–∞',
      'COURIER_PICKED': '–ü—Ä–∏–Ω—è—Ç –∫—É—Ä—å–µ—Ä–æ–º',
      'ENROUTE': '–í –ø—É—Ç–∏',
      'DELIVERED': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
      'CANCELED': '–û—Ç–º–µ–Ω–µ–Ω'
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞ –∫—É—Ä—å–µ—Ä–æ–º
    if (oldStatus === 'COURIER_WAIT' && order.status === 'COURIER_PICKED') {
      const message = `‚úÖ *–í—ã –≤–∑—è–ª–∏ –∑–∞–∫–∞–∑ #${order.id.slice(-8)}*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üë§ *–ö–ª–∏–µ–Ω—Ç:* ${order.customerName}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${order.customerPhone}

${order.customerComment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${order.customerComment}` : ''}

üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier ? order.courier.fullname : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`
      
      // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ URL –≤–∞–ª–∏–¥–Ω—ã–π
      const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'
      const isUrlValid = isValidTelegramUrl(baseUrl)
      
      let keyboard = null
      if (isUrlValid) {
        keyboard = {
          inline_keyboard: [
            [
              {
                text: 'üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã',
                url: `${baseUrl}/courier/dashboard?tab=my`
              }
            ]
          ]
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
      try {
        if (!keyboard || !checkMessageLength(message, keyboard)) {
          await bot.sendMessage(chatId, message, {
            parse_mode: 'Markdown'
          })
          // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId})`)
          return
        }
        
        await bot.sendMessage(chatId, message, {
          parse_mode: 'Markdown',
          reply_markup: keyboard
        })
        // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId})`)
        return
      } catch (error: any) {
        // console.error(`Telegram: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId}):`, error.message)
        if (error.message.includes('chat not found')) {
          // console.log(`Telegram: Chat ID ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ.`)
        }
        return
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
    const _getStatusEmoji = (status: string) => {
      switch (status) {
        case 'ENROUTE': return 'üöö'
        case 'DELIVERED': return '‚úÖ'
        case 'CANCELED': return '‚ùå'
        default: return 'üîÑ'
      }
    }

    let message = ''
    
    // –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    if (order.status === 'ENROUTE') {
      message = `üöö *–ó–∞–∫–∞–∑ #${order.id.slice(-8)} –≤ –ø—É—Ç–∏*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üë§ *–ö–ª–∏–µ–Ω—Ç:* ${order.customerName}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${order.customerPhone}

${order.customerComment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${order.customerComment}` : ''}

üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier ? order.courier.fullname : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`
    } else if (order.status === 'DELIVERED') {
      message = `‚úÖ *–ó–∞–∫–∞–∑ #${order.id.slice(-8)} –¥–æ—Å—Ç–∞–≤–ª–µ–Ω*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üë§ *–ö–ª–∏–µ–Ω—Ç:* ${order.customerName}

üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier ? order.courier.fullname : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`
    } else if (order.status === 'CANCELED') {
      message = `‚ùå *–ó–∞–∫–∞–∑ #${order.id.slice(-8)} –æ—Ç–º–µ–Ω–µ–Ω*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
${order.cancelComment ? `üí¨ *–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã:* ${order.cancelComment}` : ''}

üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier ? order.courier.fullname : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`
    } else {
      // –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
      message = `üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ #${order.id.slice(-8)}*

–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: *${statusLabels[oldStatus as keyof typeof statusLabels]}* ‚Üí *${statusLabels[order.status as keyof typeof statusLabels]}*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}

${order.courier ? `üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier.fullname}` : ''}`
    }

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ URL –≤–∞–ª–∏–¥–Ω—ã–π
    let keyboard = null
    if (order.status === 'ENROUTE') {
      const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'
      const isUrlValid = isValidTelegramUrl(baseUrl)
      
      if (isUrlValid) {
        keyboard = {
          inline_keyboard: [
            [
              {
                text: 'üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã',
                url: `${baseUrl}/courier/dashboard?tab=my`
              }
            ]
          ]
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    try {
      if (!keyboard || !checkMessageLength(message, keyboard)) {
        await bot.sendMessage(chatId, message, {
          parse_mode: 'Markdown'
        })
        // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId})`)
        return
      }

      await bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        reply_markup: keyboard
      })
      // console.log(`Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId})`)
    } catch (error: any) {
      // console.error(`Telegram: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫—É—Ä—å–µ—Ä—É ${order.courier?.fullname} (${chatId}):`, error.message)
      if (error.message.includes('chat not found')) {
        // console.log(`Telegram: Chat ID ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö—É—Ä—å–µ—Ä –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ.`)
      }
      return
    }
  } catch (_error) { // eslint-disable-line @typescript-eslint/no-unused-vars
    // console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', _error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
export async function testTelegramBot() {
  // console.log('Telegram: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞...')
  
  const bot = await getBot()
  if (!bot) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞')
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∫—É—Ä—å–µ—Ä–æ–≤ —Å chat_id
  const couriers = await prisma.user.findMany({
    where: {
      role: 'COURIER'
    }
  })

  // console.log('Telegram: –ù–∞–π–¥–µ–Ω–æ –∫—É—Ä—å–µ—Ä–æ–≤:', couriers.length)
  
  let _successCount = 0
  let _errorCount = 0

  for (const courier of couriers) {
    try {
      const chatId = await getCourierChatId(courier.id)
      if (!chatId) {
        // console.log(`Telegram: Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ${courier.fullname}`)
        continue
      }

      // console.log(`Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä—É ${courier.fullname}...`)
      
      // –°–æ–∑–¥–∞–µ–º Promise —Å —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      const sendMessagePromise = bot.sendMessage(chatId, `ü§ñ –ü—Ä–∏–≤–µ—Ç, ${courier.fullname}! Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã.`)
      
      const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => reject(new Error('Telegram API timeout')), 10000)
      })
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      await Promise.race([sendMessagePromise, timeoutPromise])
      
      // console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä—å–µ—Ä—É ${courier.fullname}`)
      _successCount++
    } catch (_courierError) { // eslint-disable-line @typescript-eslint/no-unused-vars
      // console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É—Ä—å–µ—Ä—É ${courier.fullname}:`, _courierError)
      _errorCount++
    }
  }
  
  // console.log(`–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –£—Å–ø–µ—à–Ω–æ: ${_successCount}, –û—à–∏–±–æ–∫: ${_errorCount}`)
  
  if (_successCount === 0) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏ –æ–¥–Ω–æ–º—É –∫—É—Ä—å–µ—Ä—É')
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫—É—Ä—å–µ—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
export async function findCourierByPhone(phoneNumber: string) {
  try {
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, –ø–ª—é—Å—ã)
    const normalizedPhone = phoneNumber.replace(/[\s\-+()]/g, '')
    
    const courier = await prisma.user.findFirst({
      where: {
        role: 'COURIER',
        OR: [
          { phoneNumber: phoneNumber },
          { phoneNumber: normalizedPhone },
          { phoneNumber: `+${normalizedPhone}` },
          { phoneNumber: `+996${normalizedPhone.slice(-9)}` }, // –î–ª—è –∫—ã—Ä–≥—ã–∑—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤
        ]
      }
    })

    return courier
  } catch (_error) { // eslint-disable-line @typescript-eslint/no-unused-vars
    // console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫—É—Ä—å–µ—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', _error)
    return null
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–∞ –≤ Telegram
export async function registerCourierInTelegram(chatId: string, phoneNumber: string): Promise<TelegramRegistrationResult> {
  try {
    // console.log(`Telegram: –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–∞. Chat ID: ${chatId}, Phone: ${phoneNumber}`)
    
    // –ò—â–µ–º –∫—É—Ä—å–µ—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const courier = await findCourierByPhone(phoneNumber)
    
    if (!courier) {
      // console.log(`Telegram: –ö—É—Ä—å–µ—Ä —Å –Ω–æ–º–µ—Ä–æ–º ${phoneNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`)
      return {
        success: false,
        message: `‚ùå –ö—É—Ä—å–µ—Ä —Å –Ω–æ–º–µ—Ä–æ–º ${phoneNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`
      }
    }

    // console.log(`Telegram: –ù–∞–π–¥–µ–Ω –∫—É—Ä—å–µ—Ä: ${courier.fullname} (ID: ${courier.id})`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∫—É—Ä—å–µ—Ä
    const existingChatId = await getCourierChatId(courier.id)
    if (existingChatId && existingChatId === chatId) {
      // console.log(`Telegram: –ö—É—Ä—å–µ—Ä ${courier.fullname} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å —ç—Ç–∏–º Chat ID: ${existingChatId}`)
      return {
        success: true,
        message: `‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, ${courier.fullname}! –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.`
      }
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º courierID –∏ chatID –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
    const success = await setCourierChatId(courier.id, chatId)
    
    if (success) {
      // console.log(`Telegram: –ö—É—Ä—å–µ—Ä ${courier.fullname} (ID: ${courier.id}) —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å Chat ID: ${chatId}`)
      return {
        success: true,
        message: `‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${courier.fullname}! 

–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.

üíª –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-—Å–∞–π—Ç:`,
        data: {
          courierId: courier.id,
          courierName: courier.fullname,
          chatId: chatId
        },
        keyboard: {
          inline_keyboard: [[
            {
              text: 'üåê –í–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç',
              url: `${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/courier/login`
            }
          ]]
        }
      }
    } else {
      // console.error(`Telegram: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Chat ID –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ${courier.fullname}`)
      return {
        success: false,
        message: `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`
      }
    }
  } catch (_error) { // eslint-disable-line @typescript-eslint/no-unused-vars
    // console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–∞ –≤ Telegram:', _error)
    return {
      success: false,
      message: `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`
    }
  }
}
